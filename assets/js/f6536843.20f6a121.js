"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[613],{4852:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(9231);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(n),m=r,d=f["".concat(o,".").concat(m)]||f[m]||p[m]||s;return n?a.createElement(d,l(l({ref:t},c),{},{components:n})):a.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[f]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<s;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4019:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var a=n(4011),r=(n(9231),n(4852));const s={},l="status",i={unversionedId:"status/readme",id:"status/readme",title:"status",description:"Motivation",source:"@site/../src/status/readme.md",sourceDirName:"status",slug:"/status/",permalink:"/methods/status/",draft:!1,editUrl:"https://github.com/effector/patronum/tree/main/src/../src/status/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"methodsSidebar",previous:{title:"spread",permalink:"/methods/spread/"},next:{title:"throttle",permalink:"/methods/throttle/"}},o={},u=[{value:"Motivation",id:"motivation",level:2},{value:"Formulae",id:"formulae",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Successful effect call changing status to &quot;done&quot;",id:"successful-effect-call-changing-status-to-done",level:3},{value:"Initial status",id:"initial-status",level:3},{value:"Clear (reset) status",id:"clear-reset-status",level:3}],c={toc:u},f="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(f,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"status"},"status"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { status } from 'patronum';\n// or\nimport { status } from 'patronum/status';\n")),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"This method returns current status of effect as store with string enumeration.\nIt is useful to show correct state of process in UI."),(0,r.kt)("h2",{id:"formulae"},"Formulae"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"$status = status(effect);\n$status = status({ effect, defaultValue });\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"status")," is run, set ",(0,r.kt)("inlineCode",{parentName:"li"},"defaultValue")," value to ",(0,r.kt)("inlineCode",{parentName:"li"},"$status")),(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"effect")," is called, set ",(0,r.kt)("inlineCode",{parentName:"li"},"pending")," status."),(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"effect")," is succeeded, set ",(0,r.kt)("inlineCode",{parentName:"li"},"done")," status."),(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"effect")," is failed, set ",(0,r.kt)("inlineCode",{parentName:"li"},"fail")," status.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Shorthand ",(0,r.kt)("inlineCode",{parentName:"p"},"status(effect)")," is available since patronum 2.1.0\nUse ",(0,r.kt)("inlineCode",{parentName:"p"},"status({ effect })")," with patronum < 2.1.0")),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"effect")," ",(0,r.kt)("inlineCode",{parentName:"li"},"(Effect<P, R>)")," \u2014 any effect, that you need to watch status"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"defaultValue")," ",(0,r.kt)("inlineCode",{parentName:"li"},"('initial' | 'pending' | 'done' | 'fail')")," ",(0,r.kt)("em",{parentName:"li"},"optional")," \u2014 when ",(0,r.kt)("inlineCode",{parentName:"li"},"$status")," initializes, set initial value for it. By default value is ",(0,r.kt)("inlineCode",{parentName:"li"},'"initial"'))),(0,r.kt)("h2",{id:"returns"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$status")," ",(0,r.kt)("inlineCode",{parentName:"li"},"(Store<'initial' | 'pending' | 'done' | 'fail'>)")," \u2014 Store that saves current state of the effects")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: use can manually reset status, just use ",(0,r.kt)("inlineCode",{parentName:"p"},"$status.reset(event)"))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("h3",{id:"successful-effect-call-changing-status-to-done"},'Successful effect call changing status to "done"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { createEvent, createEffect } from \'effector\';\nimport { status } from \'patronum/status\';\n\nconst effect = createEffect(() => Promise.resolve(null));\nconst $status = status({ effect });\n\n$status.watch((value) => console.log(`status: ${value}`));\n// => status: "initial"\n\neffect();\n// => status: "pending"\n// => status: "done"\n')),(0,r.kt)("h3",{id:"initial-status"},"Initial status"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { createEvent, createEffect } from 'effector';\nimport { status } from 'patronum/status';\n\nconst effect = createEffect(() => Promise.resolve(null));\nconst $status = status({ effect, defaultValue: 'pending' });\n\n$status.watch((value) => console.log(`status: ${value}`));\n// => status: \"pending\"\n\neffect();\n// Nothing, because $status is already pending\n// => status: \"done\"\n")),(0,r.kt)("h3",{id:"clear-reset-status"},"Clear (reset) status"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { createEvent, createEffect } from \'effector\';\nimport { status } from \'patronum/status\';\n\nconst reset = createEvent();\nconst effect = createEffect(() => new Promise((resolve) => setTimeout(resolve, 100)));\n\nconst $status = status({ effect });\n$status.reset(reset);\n\n$status.watch((value) => console.log(`status: ${value}`));\n// => status: "initial"\n\neffect();\n// => status: "pending"\n// => status: "done"\n\nreset();\n// => status: "initial"\n')))}p.isMDXComponent=!0}}]);