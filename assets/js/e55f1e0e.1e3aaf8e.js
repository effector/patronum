"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[778],{4852:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(9231);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=o,f=u["".concat(s,".").concat(d)]||u[d]||p[d]||a;return r?n.createElement(f,i(i({ref:t},m),{},{components:r})):n.createElement(f,i({ref:t},m))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8724:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(4011),o=(r(9231),r(4852));const a={},i="or",l={unversionedId:"or/readme",id:"or/readme",title:"or",description:"patronum 1.11.0",source:"@site/../src/or/readme.md",sourceDirName:"or",slug:"/or/",permalink:"/methods/or/",draft:!1,editUrl:"https://github.com/effector/patronum/tree/main/src/../src/or/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"methodsSidebar",previous:{title:"once",permalink:"/methods/once/"},next:{title:"pending",permalink:"/methods/pending/"}},s={},c=[{value:"Motivation",id:"motivation",level:3},{value:"Formulae",id:"formulae",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Alternative",id:"alternative",level:4}],m={toc:c},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"or"},"or"),(0,o.kt)("admonition",{title:"since",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"patronum 1.11.0")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { or } from 'patronum';\n// or\nimport { or } from 'patronum/or';\n")),(0,o.kt)("h3",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,"The method allows to check each passed store for truthy values.\nIt can be compared with ",(0,o.kt)("inlineCode",{parentName:"p"},"if (a || b || c || d)"),"."),(0,o.kt)("h3",{id:"formulae"},"Formulae"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"$result = or(...stores);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"$result")," store contains ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),' if at least one of passed store contains "truthy" value.')),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("p",null,"The method receives any amount of arguments."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"...stores: Array<Store<T>>")," \u2014 Each argument must be store with a value of any kind.")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"$result: Store<boolean>")," \u2014 The store contains ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," if each passed store in ",(0,o.kt)("inlineCode",{parentName:"li"},"stores"),' contains "falsey" value')),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const $isAuthorized = createStore(true);\nconst $immediateOrder = createStore(false);\nconst $mocksForDemo = createStore(false);\n\nconst $allowedToShow = or($isAuthorized, $immediateOrder, $mocksForDemo);\nconsole.assert(true === $allowedToShow.getState());\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://share.effector.dev/H9cDYEp5"},"Try it")),(0,o.kt)("h4",{id:"alternative"},"Alternative"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { combine, createSTore } from 'effector';\n\nconst $isAuthorized = createStore(true);\nconst $immediateOrder = createStore(false);\nconst $mocksForDemo = createStore(false);\n\nconst $allowedToShow = combine(\n  $isAuthorized,\n  $immediateOrder,\n  $mocksForDemo,\n  (isAuthorized, immediateOrder, mocksForDemo) =>\n    isAuthorized || immediateOrder || mocksForDemo,\n);\nconsole.assert(true === $allowedToShow.getState());\n")))}p.isMDXComponent=!0}}]);